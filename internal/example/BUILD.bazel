load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@rules_pkg//:pkg.bzl", "pkg_deb", "pkg_tar")
load("@io_bazel_rules_docker//container:container.bzl", "container_bundle", "container_image")

go_library(
    name = "go_default_library",
    srcs = ["hello.go"],
    importpath = "mgit.at/rules_go/internal/example",
    visibility = ["//visibility:private"],
    deps = [
        "//internal/example/lib:go_default_library",
    ],
)

go_binary(
    name = "example",
    embed = [":go_default_library"],
    visibility = ["//:__subpackages__"],
)

go_test(
    name = "example_test",
    size = "small",
    srcs = ["hello_test.go"],
    embed = [":example_lib"],
)

pkg_tar(
    name = "debian-data",
    extension = "tar.gz",
    files = {
        ":example": "/usr/bin/example",
    },
    modes = {
        "/usr/bin/example": "0755",
    },
)

pkg_deb(
    name = "debian",
    architecture = "amd64",
    built_using = "bazel",
    data = ":debian-data",
    description = "A simple example program to test rules_go.",
    homepage = "https://mgit.at/",
    maintainer = "Christoph Hack <chack@mgit.at>",
    package = "example",
    version = "1.0.0",
    visibility = ["//visibility:public"],
)

go_binary(
    name = "pure",
    embed = [":example_lib"],
    pure = "on",
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "container_files",
    files = {
        ":pure": "/example",
        "@tini-static//file": "/tini",
        "@cacert//file": "/etc/ssl/certs/ca-certificates.crt",
    },
)

container_image(
    name = "container",
    entrypoint = [
        "/tini",
        "/example",
        "--",
    ],
    tars = [":container_files"],
)

container_bundle(
    name = "bundle",
    images = {
        "docker.mgit.at/example:1.0.0": ":container",
    },
)

pkg_tar(
    name = "docker",
    extension = "tar.gz",
    deps = [":bundle.tar"],
)
